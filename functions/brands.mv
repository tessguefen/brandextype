<MvCOMMENT>
	############################
	Functions
	############################
	Load_Brand_ID( brand_id, brand var )
		Load Brand Information by ID
	Load_Brand_Code( code, brand var )
		Load Brand Information by Code

	Get_Product_Brand( product_id, brand var )
		Get a Product's Brand by product ID
	AddBrand( code, name, image, icon )
		Add a Brand
	UpdateBrand( id, code, name, image, icon )
		Update a Brand
	DeleteBrand( id )
		Delete a Brand

	BrandxCat_Check( brand_id, cat_id )
		Check if a brand has a category assigned
	BrandxCat_Assign( brand_id, cat_id )
		Assign a category to a Brand
	BrandxCat_Unassign( brand_id, cat_id )
		Unassign a category from a brand

	JSON_Brands_Load_Query( module var )
	JSON_Brand_Insert( code, name, image, icon )
	JSON_Brand_Delete( brand_id )
	JSON_Brand_Update( id, code, name, image, icon )
	JSON_ViewBrands_Load_Query( module var )
	JSON_BrandxCat_Assign_Unassign( brand_id, cat_id, assign )

	UpdateProductBrand( product_id, brand_id )
		Update a Product's Brand, used in bxt.mv

	BrandxProduct_Remove_Reference( product_id )
		Remove the Product from the bxtBrandxProd table
	BrandxProduct_Category_Assignments( brand_id, product_id )
		Assign a product to brand's categories
	BrandxCat_Load_No_Types( brand_id, brandxcat var )
		Load in all categories assigned to a brand, that have no types
	BrandxCat_Load_With_Type( brand_id, type_id )
		Load in all categproes assigned to a brand, that also have a specific type
	BrandxProd_Check( brand_id, product_id )
		Check if a Product is assigned to a specific brand
	BrandxProd_Assign( brand_id, product_id )
		Assign a brand to a product
	BrandList_Load_All( brands var )
		### in progress, has some typoes
	BrandxCat_Load( brand_id, brandxcat var )
		Load in all categories from a brand, regardless of type
</MvCOMMENT>
<MvFUNCTION NAME = "Brand_Read" PARAMETERS = "brand var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand:id"		VALUE = "{ Brands.d.id }">
	<MvASSIGN NAME = "l.brand:code"		VALUE = "{ Brands.d.code }">
	<MvASSIGN NAME = "l.brand:name"		VALUE = "{ Brands.d.name }">
	<MvASSIGN NAME = "l.brand:image"	VALUE = "{ Brands.d.image }">
	<MvASSIGN NAME = "l.brand:icon"		VALUE = "{ Brands.d.icon }">
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Brand_ID" PARAMETERS = "brand_id, brand var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.brand_id ) }">
	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "Brands"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrands
							WHERE
								id = ?'
							}"
				FIELDS	= "l.brand_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Brands">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-4000:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ Brands.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Brands">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find BRAND' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Brand_Read( l.brand ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Brands">
	<MvFUNCTIONRETURN VALUE = "1" />
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Brand_Code" PARAMETERS = "code, brand var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "Brands"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrands
							WHERE
								code = ?'
							}"
				FIELDS	= "l.code">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Brands">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-1000:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ Brands.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Brands">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find TYPE CODE' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Brand_Read( l.brand ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Brands">
	<MvFUNCTIONRETURN VALUE = "1" />
</MvFUNCTION>

<MvFUNCTION NAME = "Get_Product_Brand" PARAMETERS = "product_id, brand var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product_id" VALUE = "{ trim( l.product_id ) }">
	<MvIF EXPR = "{ ISNULL l.product_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "GetProductBrand"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrandxProd
							WHERE
								product_id = ?'
							}"
				FIELDS	= "l.product_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetProductBrand">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-3000:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ GetProductBrand.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetProductBrand">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find BRAND' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.bxp:brand_id"		VALUE = "{ GetProductBrand.d.brand_id }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetProductBrand">

	<MvEVAL EXPR = "{ Load_Brand_ID( l.bxp:brand_id, l.brand ) }" />

	<MvFUNCTIONRETURN VALUE = "1" />
</MvFUNCTION>

<MvFUNCTION NAME = "AddBrand" PARAMETERS = "code, name, image, icon" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.name }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ Load_Brand_Code( l.code, l.brand_check ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	

	<MvASSIGN NAME = "l.brand:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'bxtBrands' ) }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO  ' $ g.Store_Table_Prefix $ 'bxtBrands
							( id, code, name, image, icon )
							VALUES
							(?, ?, ?, ?, ?)' }"
			 FIELDS = "l.brand:id, l.code, l.name, l.image, l.icon">

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6001', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ l.brand:id }">
</MvFUNCTION>

<MvFUNCTION NAME = "UpdateBrand" PARAMETERS = "id, code, name, image, icon" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id" VALUE = "{ trim( l.id ) }">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">
	<MvASSIGN NAME = "l.image" VALUE = "{ trim( l.image ) }">
	<MvASSIGN NAME = "l.icon" VALUE = "{ trim( l.icon ) }">

	<MvIF EXPR = "{ ISNULL l.id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.brand_load" VALUE = "{ Load_Brand_Code( l.code, l.brand_check ) }">
	<MvIF EXPR = "{ NOT ISNULL l.brand_check:code AND (l.brand_check:id NE l.id) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'bxtBrands
							SET
								code = ?,
								name = ?,
								image = ?,
								icon = ?
							WHERE
								id = ?' }"
			 FIELDS = "l.code, l.name, l.image, l.icon, l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6004', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DeleteBrand" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id" VALUE = "{ trim( l.id ) }">
	<MvIF EXPR = "{ ISNULL l.id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'bxtBrands WHERE id = ?' }"
			 FIELDS = "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxCat_Check" PARAMETERS = "brand_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.cat_id" VALUE = "{ trim( l.cat_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.cat_id }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "bxtBrandxCat"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrandxCat
							WHERE
								brand_id = ?
							AND
								cat_id = ?'
							}"
				FIELDS	= "l.brand_id, l.cat_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6008:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ bxtBrandxCat.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find TYPE' ) }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">

	<MvFUNCTIONRETURN VALUE =1 />
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxCat_Assign" PARAMETERS = "brand_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.cat_id" VALUE = "{ trim( l.cat_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.cat_id }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ BrandxCat_Check( l.brand_id, l.cat_id ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO  ' $ g.Store_Table_Prefix $ 'bxtBrandxCat
							( brand_id, cat_id )
							VALUES
							(?, ?)' }"
			 FIELDS = "l.brand_id, l.cat_id">

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6009', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxCat_Unassign" PARAMETERS = "brand_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.cat_id" VALUE = "{ trim( l.cat_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.cat_id }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	
	<MvIF EXPR = "{ NOT BrandxCat_Check( l.brand_id, l.cat_id ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'bxtBrandxCat WHERE brand_id = ? AND cat_id = ?' }"
			 FIELDS = "l.brand_id, l.cat_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Brands_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "g.Filter" VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort" VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset" VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count" VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "l.search_query" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'bxtBrands', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,code:s.code,name:s.name,image:s.image,icon:s.icon' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,code:s.code,name:s.name,image:s.image,icon:s.icon', 's.id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'bxtBrands', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'BXT-MOD-6002',g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT bxtBrands.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( bxtBrands.d.id ) }">,
					"code": "<MvEVAL EXPR = "{ bxtBrands.d.code }">",
					"name": "<MvEVAL EXPR = "{ bxtBrands.d.name }">",
					"image": "<MvEVAL EXPR = "{ bxtBrands.d.image }">",
					"image_prev": "<MvEVAL EXPR = "{ bxtBrands.d.image }">",
					"icon": "<MvEVAL EXPR = "{ bxtBrands.d.icon }">",
					"icon_prev": "<MvEVAL EXPR = "{ bxtBrands.d.icon }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "bxtBrands" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrands">
	}

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Brand_Insert" PARAMETERS = "code, name, image, icon" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ l.code }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">
	<MvASSIGN NAME = "l.image" VALUE = "{ l.image }">
	<MvASSIGN NAME = "l.icon" VALUE = "{ l.icon }">

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Brand Code is required.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Please enter a Valid Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'name', 'Brand Name is required.' ) }">
	</MvIF>

	<MvIF EXPR = "{ AddBrand(l.code, l.name, l.image, l.icon) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'A Brand with that Code already exists.' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Brand_Delete" PARAMETERS = "brand_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>

	<MvIF EXPR = "{ DeleteBrand( l.brand_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Brand_Update" PARAMETERS = "id, code, name, image, icon" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ l.code }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">
	<MvASSIGN NAME = "l.image" VALUE = "{ l.image }">
	<MvASSIGN NAME = "l.icon" VALUE = "{ l.icon }">

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Brand Code is required.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Please enter a Valid Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'name', 'Brand Name is required.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.load_brand" VALUE = "{ Load_Brand_Code( l.code, l.brand_check ) }">
	<MvIF EXPR = "{ NOT ISNULL l.brand_check:code AND (l.brand_check:id NE l.id) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'A Brand with the code ' $ l.code $ ' already exists.' ) }">
	</MvIF>

	<MvIF EXPR = "{ UpdateBrand( l.id, l.code, l.name, l.image, l.icon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ViewBrands_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "html, text, compresswhitespace">
	<MvASSIGN NAME = "g.Filter" VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort" VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset" VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count" VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "g.Brand_ID" VALUE = "{ trim( g.Brand_ID ) }">

	<MvASSIGN NAME = "l.search_query" VALUE = "">

	<MvIF EXPR = "{ g.Sort EQ 'assigned' }">
		<MvASSIGN NAME = "g.Sort" VALUE = "-assigned">
	<MvELSEIF EXPR = "{ g.Sort EQ '-assigned' }">
		<MvASSIGN NAME = "g.Sort" VALUE = "assigned">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'c.*, b.brand_id' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Categories', 'c' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'c', g.Store_Table_Prefix $ 'bxtBrandxCat', 'b', 'c.id = b.cat_id AND b.brand_id = ?', 'g.Brand_ID' ) }">

	<MvIF EXPR = "{ g.Assigned EQ 1 AND g.Unassigned EQ 0 }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'b.brand_id = ?', 'g.Brand_ID' ) }">
	<MvELSEIF EXPR = "{ g.Unassigned EQ 1 AND g.Assigned EQ 0 }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'b.brand_id IS NULL', '' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, '1', '' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'assigned:b.brand_id,category_id:c.id,category_code:c.code,category_name:c.name,category_active:c.active' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'assigned:b.brand_id,category_id:c.id,category_code:c.code,category_name:c.name,category_active:c.active', 'c.disp_order' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'Categories', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'BXT-MOD-6011',g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT Categories.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"brand_id": <MvEVAL EXPR = "{ int( g.Brand_ID ) }">,
					"assigned": <MvEVAL EXPR = "{ int( Categories.d.brand_id ) }">,
					"category_id": <MvEVAL EXPR = "{ int( Categories.d.id ) }">,
					"category_code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.code ) }">",
					"category_name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.name ) }">",
					"category_active": <MvEVAL EXPR = "{ int( Categories.d.active ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "Categories" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Categories">
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BrandxCat_Assign_Unassign" PARAMETERS = "brand_id, cat_id, assign" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.cat_id" VALUE = "{ trim( l.cat_id ) }">
	<MvASSIGN NAME = "l.assign" VALUE = "{ trim( l.assign ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'brand_id', 'Brand ID is missing.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.cat_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'cat_id', 'Category ID is missing.' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.assign }">
		<MvIF EXPR = "{ NOT BrandxCat_Assign( l.brand_id, l.cat_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'brand_id', 'An Error has occured.' ) }">
		</MvIF>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.assign }">
		<MvIF EXPR = "{ NOT BrandxCat_Unassign( l.brand_id, l.cat_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'brand_id', 'An Error has occured.' ) }">
		</MvIF>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

</MvFUNCTION>

<MvFUNCTION NAME = "UpdateProductBrand" PARAMETERS = "product_id, brand_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.product_id" VALUE = "{ trim( l.product_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.product_id }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ NOT BrandxProd_Check( l.brand_id, l.product_id) }">
		<MvIF EXPR = "{ NOT BrandxProd_Assign( l.brand_id, l.product_id ) }">
			<MvFUNCTIONRETURN VALUE = 0 />
		</MvIF>

		<MvIF EXPR = "{ NOT BrandxProduct_Category_Assignments( l.brand_id, l.product_id) }">
			<MvCOMMENT> ### ERROR HERE ### </MvCOMMENT>
		</MvIF>

	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxProduct_Remove_Reference" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product_id" VALUE = "{ trim( l.product_id ) }">

	<MvIF EXPR = "{ ISNULL l.product_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'bxtBrandxProd WHERE product_id = ?' }"
			 FIELDS = "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxProduct_Category_Assignments" PARAMETERS = "brand_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.product_id" VALUE = "{ trim( l.product_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.product_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ BrandxCat_Load_No_Types( l.brand_id, l.brandxcats) }">
		<MvIF EXPR = "{ miva_array_elements( l.brandxcats ) GT 0 }">
			<MvFOREACH ITERATOR = "l.cat" ARRAY = "l.brandxcats">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].CategoryXProduct_Load( l.cat:id, l.product_id, l.null ) }">
					<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].CategoryXProduct_Insert( l.cat:id, l.product_id ) }">
						<MvCOMMENT> ### ERROR HERE ### </MvCOMMENT>
					</MvIF>
				</MvIF>
			</MvFOREACH>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.product_type" VALUE = "{ Get_Product_Type( l.product_id ) }">

	<MvIF EXPR = "{ BrandxCat_Load_With_Type( l.brand_id, l.product_type:id, l.brandxcats_types) }">
		<MvIF EXPR = "{ miva_array_elements( l.brandxcats_types ) GT 0 }">
			<MvFOREACH ITERATOR = "l.cat" ARRAY = "l.brandxcats_types">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].CategoryXProduct_Load( l.cat:id, l.product_id, l.null ) }">
					<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].CategoryXProduct_Insert( l.cat:id, l.product_id ) }">
						<MvCOMMENT> ### ERROR HERE ### </MvCOMMENT>
					</MvIF>
				</MvIF>
			</MvFOREACH>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxCat_Load_No_Types" PARAMETERS = "brand_id, brandxcat var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "bxtBrandxCat"
				QUERY 	= "{ 'SELECT
								b.*, t.type_id
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrandxCat as b
							LEFT JOIN ' $
								g.Store_Table_Prefix $ 'bxtTypexCat as t
							ON
								b.cat_id = t.cat_id
							WHERE
								b.brand_id = ?
							AND
								t.type_id IS NULL'
							}"
				FIELDS	= "l.brand_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6008:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ bxtBrandxCat.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find BRAND x PROD' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.brands_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT bxtBrandxCat.d.EOF }">
		<MvASSIGN NAME = "l.cats_count" VALUE = "{ l.cats_count + 1 }">
		<MvASSIGN NAME = "l.brandxcat" INDEX = "{ l.cats_count }" MEMBER = "id" VALUE = "{ bxtBrandxCat.d.cat_id }">		
		<MvSKIP NAME = "Merchant" VIEW = "bxtBrandxCat" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">

	<MvFUNCTIONRETURN VALUE = 1>

</MvFUNCTION>

<MvFUNCTION NAME = "BrandxCat_Load_With_Type" PARAMETERS = "brand_id, type_id, brandxcat var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.type_id" VALUE = "{ trim( l.type_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.type_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "bxtBrandxCat"
				QUERY 	= "{ 'SELECT
								b.*, t.type_id
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrandxCat as b
							LEFT JOIN ' $
								g.Store_Table_Prefix $ 'bxtTypexCat as t
							ON
								b.cat_id = t.cat_id
							WHERE
								b.brand_id = ?
							AND
								t.type_id = ?'
							}"
				FIELDS	= "l.brand_id, l.type_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6008:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ bxtBrandxCat.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find BRAND x PROD' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.brands_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT bxtBrandxCat.d.EOF }">
		<MvASSIGN NAME = "l.cats_count" VALUE = "{ l.cats_count + 1 }">
		<MvASSIGN NAME = "l.brandxcat" INDEX = "{ l.cats_count }" MEMBER = "id" VALUE = "{ bxtBrandxCat.d.cat_id }">		
		<MvSKIP NAME = "Merchant" VIEW = "bxtBrandxCat" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">

	<MvFUNCTIONRETURN VALUE = 1>

</MvFUNCTION>

<MvFUNCTION NAME = "BrandxProd_Check" PARAMETERS = "brand_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.product_id" VALUE = "{ trim( l.product_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.product_id }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "bxtBrandxProd"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrandxProd
							WHERE
								brand_id = ?
							AND
								product_id = ?'
							}"
				FIELDS	= "l.brand_id, l.product_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxProd">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6008:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ bxtBrandxProd.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxProd">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find BRAND x PROD' ) }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxProd">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxProd_Assign" PARAMETERS = "brand_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.product_id" VALUE = "{ trim( l.product_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.product_id }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ BrandxProd_Check( l.brand_id, l.product_id ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT> ### Remove Product from table if it was already there. 1 Brand per Product ### </MvCOMMENT>
	<MvIF EXPR = "{ NOT BrandxProduct_Remove_Reference( l.product_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO  ' $ g.Store_Table_Prefix $ 'bxtBrandxProd
							( brand_id, product_id )
							VALUES
							(?, ?)' }"
			 FIELDS = "l.brand_id, l.product_id">

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6009', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT> #### TESS TO UPDATE ### </MvCOMMENT>

<MvFUNCTION NAME = "BrandList_Load_All" PARAMETERS = "brands var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Brands"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'Brands ORDER BY id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'BXT-MOD-00010', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.brands_count" VALUE = 0>
	<MvWHILE EXPR = "{ NOT Brands.d.EOF }">
		<MvASSIGN NAME = "l.brands_count" VALUE = "{ l.brands_count + 1 }">
		<MvEVAL EXPR = "{ Brand_Read( l.brands[ l.brands_count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "Brands" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Brands">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Load All Brands' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxCat_Load" PARAMETERS = "brand_id, brandxcat var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "bxtBrandxCat"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrandxCat
							WHERE
								brand_id = ?'
							}"
				FIELDS	= "l.brand_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6008:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.brands_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT Brands.d.EOF }">
		<MvASSIGN NAME = "l.brands_count" VALUE = "{ l.brands_count + 1 }">
		<MvASSIGN NAME = "l.brandxcat" INDEX = "{ l.brands_count }" MEMBER = "id" VALUE = "{ Brands.d.cat_id }">		
		<MvSKIP NAME = "Merchant" VIEW = "bxtBrandxCat" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>