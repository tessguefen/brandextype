<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "compresswhitespace">
	<MvASSIGN NAME = "l.module:code"		VALUE = "brandextype">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Super Fantastic Ultimate Power Magic Brand and Types">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Tess Guefen">
	<MvASSIGN NAME = "l.module:version"		VALUE = "1.000">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "9.00">
	<MvASSIGN NAME = "l.module:description"	VALUE = "omgz">
	<MvASSIGN NAME = "l.module:features"	VALUE = "data_store, util, vis_util, json, clientside, fields_prod">
</MvFUNCTION>
<mvcomment>, fields_cat, not_cat, not_prod, vis_prod, vis_cat</mvcomment>

<MvCOMMENT>
| ========================================================================================================================
|	INSTALL
| ========================================================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	===========================
	Create sXX_bxtBrands
	===========================
	</MvCOMMENT>
	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'bxtBrands
								(
									id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
									name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
									image		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
									icon		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ '
								) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'BXT-INSTALL-0001', g.MvQUERY_Error ) }">
	</MvIF>
	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'bxtBrands ON ' $ g.Store_Table_Prefix $ 'bxtBrands ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'BXT-INSTALL-0002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	===========================
	Create sXX_bxtTypes
	===========================
	</MvCOMMENT>
	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'bxtTypes
								(
									id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
									name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ '
								) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'BXT-INSTALL-0003', g.MvQUERY_Error ) }">
	</MvIF>
	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'bxtTypes ON ' $ g.Store_Table_Prefix $ 'bxtTypes ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'BXT-INSTALL-0004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	===========================
	Create sXX_bxtBrandxCat
	===========================
	</MvCOMMENT>
	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'bxtBrandxCat
								(
									brand_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									cat_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ '
								) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'BXT-INSTALL-0005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	===========================
	Create sXX_bxtBrandxProd
	===========================
	</MvCOMMENT>
	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'bxtBrandxProd
								(
									brand_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ '
								) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'BXT-INSTALL-0006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	===========================
	Create sXX_bxtTypexCat
	===========================
	</MvCOMMENT>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'bxtTypexCat
								(
									type_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									cat_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ '
								) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'BXT-INSTALL-0007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	===========================
	Create sXX_bxtTypexProd
	===========================
	</MvCOMMENT>
	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'bxtTypexProd
								(
									type_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ '
								) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'BXT-INSTALL-0007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'bxtBrands', 1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-INSTALL-0008:', 'An error occured while creating the storekey, bxtBrands. Please make sure this does not already exsist.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'bxtTypes', 1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-INSTALL-0009:', 'An error occured while creating the storekey, bxtTypes. Please make sure this does not already exsist.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'bxtBrands' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'bxtTypes' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'bxtBrandxCat' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'bxtBrandxProd' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'bxtTypexCat' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'bxtTypexProd' }">

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'bxtBrands' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'bxtTypes' ) }">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvCOMMENT>
| ========================================================================================================================
|	UTIL
| ========================================================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation" PARAMETERS = "module var, ident" STANDARDOUTPUTLEVEL = "compresswhitespace">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].LeftNavigation_Dot( l.indent - 1, 'Screen=SUTL&Store_Code=' $ encodeattribute( g.Store:code ) $ '&Module_Code=' $ encodeattribute( l.module:code ), 'BXT', 'Super Fantastic Ultimate Power Magic Brand and Types' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "html, text, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Start( 'Super Fantastic Ultimate Power Magic Brand and Types', '', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">

	<MvIF EXPR = "{ g.BXTScreen EQ 'VIEWBRAND' AND g.View_Brand }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_CSS() }">
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Store_Code=' $ encodeattribute( g.Store_Code ) $ '&View_Brand=' $ encodeattribute( g.View_Brand ) $ '&Filename=ViewBrands_functions.js' }"></script>
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Store_Code=' $ encodeattribute( g.Store_Code ) $ '&View_Brand=' $ encodeattribute( g.View_Brand ) $ '&Filename=ViewBrands.js' }"></script>
		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new ViewBrands_Batchlist(); } );
		</script>
	<MvELSEIF EXPR = "{ g.BXTScreen EQ 'VIEWTYPE' AND g.View_Type }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_CSS() }">
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Store_Code=' $ encodeattribute( g.Store_Code ) $ '&View_Type=' $ encodeattribute( g.View_Type) $ '&Filename=ViewBrands_functions.js' }"></script>
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Store_Code=' $ encodeattribute( g.Store_Code ) $ '&View_Type=' $ encodeattribute( g.View_Type) $ '&Filename=ViewBrands.js' }"></script>
		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new ViewTypes_Batchlist(); } );
		</script>
	<MvELSEIF EXPR = "{ g.Tab EQ 'BXTBrands' OR ISNULL g.Tab }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_CSS() }">
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Store_Code=' $ encodeattribute( g.Store_Code ) $ '&Filename=Brands_functions.js' }"></script>
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Store_Code=' $ encodeattribute( g.Store_Code ) $ '&Filename=Brands.js' }"></script>
		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new Brands_Batchlist(); } );
		</script>
	<MvELSEIF EXPR = "{ g.Tab EQ 'BXTTypes' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_CSS() }">
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Filename=Types_functions.js' }"></script>
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Filename=Types.js' }"></script>
		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new Types_Batchlist(); } );
		</script>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_End( 'Super Fantastic Ultimate Power Magic Brand and Types', '', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginContent() }">
	
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawTabs( 'BXT', 'BXTBrands:Brands,BXTTypes:Types' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_HTML() }">
	<MvIF EXPR = "{ g.BXTScreen EQ 'VIEWBRAND' AND g.View_Brand }">
		<div id="BXTView_Brands"></div>
	<MvELSEIF EXPR = "{ g.BXTScreen EQ 'VIEWTYPE' AND g.View_Type }">
		<div id="BXTView_Types"></div>
	<MvELSEIF EXPR = "{ g.Tab EQ 'BXTBrands' }">
		<div id="BXTBrands"></div>
	<MvELSEIF EXPR = "{ g.Tab EQ 'BXTTypes' }">
		<div id="BXTTypes"></div>
	</MvIF>

	<MvHIDE FIELDS = "g.Module_Code">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].EndContent() }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons( '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].EndScreen() }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "compresswhitespace">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>


<MvCOMMENT>
| ========================================================================================================================
|	VIS_UTIL
| ========================================================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Utility_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "compresswhitespace">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "compresswhitespace">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "compresswhitespace">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvCOMMENT>
| ========================================================================================================================
|	CLIENTSIDE
| ========================================================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace">
	<MvIF EXPR = "{ g.Filename EQ 'Brands.js' }">
		<MvINCLUDE FILE = "js/Brands.js">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'Brands_functions.js' }">
		<MvINCLUDE FILE = "js/Brands_functions.js">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'Types.js' }">
		<MvINCLUDE FILE = "js/Types.js">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'Types_functions.js' }">
		<MvINCLUDE FILE = "js/Types_functions.js">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'ViewBrands.js' }">
		<MvINCLUDE FILE = "js/ViewBrands.js">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'ViewBrands_functions.js' }">
		<MvINCLUDE FILE = "js/ViewBrands_functions.js">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'ViewTypes.js' }">
		<MvINCLUDE FILE = "js/ViewTypes.js">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'ViewTypes_functions.js' }">
		<MvINCLUDE FILE = "js/ViewTypes_functions.js">
	</MvIF>
</MvFUNCTION>


<MvCOMMENT>
| ========================================================================================================================
|	JSON
| ========================================================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace">
	<MvIF EXPR = "{ g.Module_Function EQ 'Brands_Load_Query' }">
		<MvEVAL EXPR = "{ JSON_Brands_Load_Query( l.module ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Brand_Insert' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Brand_Insert( g.code, g.name, g.image, g.icon ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Brand_Update' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Brand_Update( g.id, g.code, g.name, g.image, g.icon ) }" />
	</MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Brand_Delete' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Brand_Delete( g.Brand ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Types_Load_Query' }">
		<MvEVAL EXPR = "{ JSON_Types_Load_Query( l.module ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Type_Insert' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Type_Insert( g.code, g.name ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Type_Update' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Type_Update( g.id, g.code, g.name ) }" />
	</MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Type_Delete' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Type_Delete( g.Type ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'ViewBrands_Load_Query' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_ViewBrands_Load_Query( l.module) }" />
	</MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'BrandXCategoryAssign' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_BrandxCat_Assign_Unassign( g.Brand_ID, g.Category_ID, g.Assign) }" />
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
| ========================================================================================================================
|	FIELDS_PROD
| ========================================================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">

	<MvASSIGN NAME = "l.fields" INDEX = "1" MEMBER = "code" VALUE = "type">
	<MvASSIGN NAME = "l.fields" INDEX = "1" MEMBER = "name" VALUE = "Type">
	<MvASSIGN NAME = "l.fields" INDEX = "2" MEMBER = "code" VALUE = "brand">
	<MvASSIGN NAME = "l.fields" INDEX = "2" MEMBER = "name" VALUE = "Brand">

	<MvFUNCTIONRETURN VALUE = 2>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.code EQ 'type' }">
		<MvFUNCTIONRETURN VALUE = "Type">
	</MvIF>
	<MvIF EXPR = "{ l.code EQ 'brand' }">
		<MvFUNCTIONRETURN VALUE = "Brand">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value" PARAMETERS = "module var, product_id, code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ Return_Product_Brand_Or_Type( l.product_id, l.code ) }" />
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field" PARAMETERS = "module var, product_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Update_Product_Brand_Or_Type( l.product_id, l.code, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
</MvFUNCTION>


<MvCOMMENT>
| ========================================================================================================================
|	MODULE FUNCTIONS
|	Order is whack, sorry.
|	- Update_Product_Brand_Or_Type( product_id, brand_or_type, value )
|	- Read_Brand( brand var )
|	- Read_Type( type var )
|	- Load_Brand_ID( brand_id )
|	- Load_Brand_Code( code )
|	- Load_Type_ID( type_id )
|	- Load_Type_Code( code )
|	- ReturnProdBrandorType( product_id, brand_or_type )
|	- Get_Product_Brand( product_id )
|	- Get_Product_Type( product_id )
|	- UpdateProductBrand( product_id, brand_id)
|	- UpdateProductType( product_id, type_id )
|	- AddBrand( code, name, image, icon )
|	- UpdateBrand( id, code, name, image, icon)
|	- DeleteBrand( id )
|	- AddType( code, name )
|	- UpdateType( id, code, name )
|	- DeleteType( id )
|	- BrandxCat_Check( brand_id, cat_id )
|	- BrandxCat_Assign( brand_id, cat_id )
|	- BrandxCat_Unassign( brand_id, cat_id )
|
|	===[ JSON ]===
|
|	- JSON_Brands_Load_Query( module var)
|	- JSON_Brand_Insert( code, name, image, icon )
|	- JSON_Brand_Update( id, code, name, image, icon)
|	- JSON_Types_Load_Query( module var)
|	- JSON_Type_Insert( code, name )
|	- JSON_Type_Update( id, code, name )
|	- JSON_ViewBrands_Load_Query( module var)
|	- JSON_BrandxCat_Assign( code, name )
|	- JSON_ViewTypes_Load_Query( module var)
|	- JSON_BrandxCat_Assign_Unassign( code, name, assign )
| ========================================================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Update_Product_Brand_Or_Type" PARAMETERS = "product_id, brand_or_type, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.product_id OR NOT l.brand_or_type OR NOT l.value }">
		<MvFUNCTIONRETURN VALUE = "" />
	</MvIF>
	<MvIF EXPR = "{ l.brand_or_type EQ 'brand' }">
		<MvASSIGN NAME = "l.brand" VALUE = "{ Load_Brand_Code( l.value ) }">
		<MvIF EXPR = "{ l.brand:id }">
			<MvFUNCTIONRETURN VALUE = "{ UpdateProductBrand( l.product_id, l.brand:id ) }" />
		</MvIF>
	</MvIF>
	<MvIF EXPR = "{ l.brand_or_type EQ 'type' }">
		<MvASSIGN NAME = "l.type" VALUE = "{ Load_Type_Code( l.value ) }">
		<MvIF EXPR = "{ l.type:id }">
			<MvFUNCTIONRETURN VALUE = "{ UpdateProductType( l.product_id, l.type:id ) }" />
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Brand_ID" PARAMETERS = "brand_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.brand_id ) }">
	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "GetBrandID"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrands
							WHERE
								id = ?'
							}"
				FIELDS	= "l.brand_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetBrandID">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-4000:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ GetBrandID.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetBrandID">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find BRAND' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.brand:id"		VALUE = "{ GetBrandID.d.id }">
	<MvASSIGN NAME = "l.brand:code"		VALUE = "{ GetBrandID.d.code }">
	<MvASSIGN NAME = "l.brand:name"		VALUE = "{ GetBrandID.d.name }">
	<MvASSIGN NAME = "l.brand:image"	VALUE = "{ GetBrandID.d.image }">
	<MvASSIGN NAME = "l.brand:icon"		VALUE = "{ GetBrandID.d.icon }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetBrandID">
	<MvFUNCTIONRETURN VALUE = "{ l.brand }" />
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Brand_Code" PARAMETERS = "code" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "GetBrandCode"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrands
							WHERE
								code = ?'
							}"
				FIELDS	= "l.code">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetBrandCode">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-1000:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ GetBrandCode.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetBrandCode">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find TYPE CODE' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.brand:id"		VALUE = "{ GetBrandCode.d.id }">
	<MvASSIGN NAME = "l.brand:code"		VALUE = "{ GetBrandCode.d.code }">
	<MvASSIGN NAME = "l.brand:name"		VALUE = "{ GetBrandCode.d.name }">
	<MvASSIGN NAME = "l.brand:image"	VALUE = "{ GetBrandCode.d.image }">
	<MvASSIGN NAME = "l.brand:icon"		VALUE = "{ GetBrandCode.d.icon }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetBrandCode">
	<MvFUNCTIONRETURN VALUE = "{ l.brand }" />
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Type_ID" PARAMETERS = "type_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.type_id" VALUE = "{ trim( l.type_id ) }">
	<MvIF EXPR = "{ ISNULL l.type_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "GetTypeID"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtTypes
							WHERE
								id = ?'
							}"
				FIELDS	= "l.type_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetTypeID">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-2000:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ GetTypeID.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetTypeID">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find TYPE ID' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.type:id"		VALUE = "{ GetTypeID.d.id }">
	<MvASSIGN NAME = "l.type:code"		VALUE = "{ GetTypeID.d.code }">
	<MvASSIGN NAME = "l.type:name"		VALUE = "{ GetTypeID.d.name }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetTypeID">
	<MvFUNCTIONRETURN VALUE = "{ l.type }" />
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Type_Code" PARAMETERS = "code" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "GetTypeCode"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtTypes
							WHERE
								code = ?'
							}"
				FIELDS	= "l.code">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetTypeCode">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-2000:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ GetTypeCode.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetTypeCode">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find CODE' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.type:id"		VALUE = "{ GetTypeCode.d.id }">
	<MvASSIGN NAME = "l.type:code"		VALUE = "{ GetTypeCode.d.code }">
	<MvASSIGN NAME = "l.type:name"		VALUE = "{ GetTypeCode.d.name }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetTypeCode">
	<MvFUNCTIONRETURN VALUE = "{ l.type }" />
</MvFUNCTION>

<MvFUNCTION NAME = "Return_Product_Brand_Or_Type" PARAMETERS = "product_id, brand_or_type" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product_id" VALUE = "{ trim( l.product_id ) }">
	<MvASSIGN NAME = "l.brand_or_type" VALUE = "{ trim( l.brand_or_type ) }">
	<MvIF EXPR = "{ ISNULL l.product_id OR ISNULL l.brand_or_type }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>
	<MvIF EXPR = "{ l.brand_or_type EQ 'brand' }">
		<MvASSIGN NAME = "l.brand" VALUE = "{ Get_Product_Brand( l.product_id ) }">
		<MvIF EXPR = "{ l.brand:code }">
			<MvFUNCTIONRETURN VALUE = "{ l.brand:code }" />
		</MvIF>
	</MvIF>
	<MvIF EXPR = "{ l.brand_or_type EQ 'type' }">
		<MvASSIGN NAME = "l.type" VALUE = "{ Get_Product_Type( l.product_id ) }">
		<MvIF EXPR = "{ l.type:code }">
			<MvFUNCTIONRETURN VALUE = "{ l.type:code }" />
		</MvIF>
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Get_Product_Brand" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product_id" VALUE = "{ trim( l.product_id ) }">
	<MvIF EXPR = "{ ISNULL l.product_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "GetProductBrand"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrandxProd
							WHERE
								product_id = ?'
							}"
				FIELDS	= "l.product_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetProductBrand">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-3000:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ GetProductBrand.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetProductBrand">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find BRAND' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.bxp:brand_id"		VALUE = "{ GetProductBrand.d.brand_id }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetProductBrand">

	<MvFUNCTIONRETURN VALUE = "{ Load_Brand_ID( l.bxp:brand_id ) }" />
</MvFUNCTION>

<MvFUNCTION NAME = "Get_Product_Type" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product_id" VALUE = "{ trim( l.product_id ) }">
	<MvIF EXPR = "{ ISNULL l.product_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "GetProductType"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtTypexProd
							WHERE
								product_id = ?'
							}"
				FIELDS	= "l.product_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetProductType">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-5000:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ GetProductType.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetProductType">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find TYPE' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.bxp:type_id" VALUE = "{ GetProductType.d.type_id }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "GetProductType">

	<MvFUNCTIONRETURN VALUE = "{ Load_Type_ID( l.bxp:type_id ) }" />
</MvFUNCTION>

<MvFUNCTION NAME = "UpdateProductBrand" PARAMETERS = "product_id, brand_id" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "UpdateProductType" PARAMETERS = "product_id, type_id" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>




<MvFUNCTION NAME = "AddBrand" PARAMETERS = "code, name, image, icon" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.name }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ Load_Brand_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	

	<MvASSIGN NAME = "l.brand:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'bxtBrands' ) }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO  ' $ g.Store_Table_Prefix $ 'bxtBrands
							( id, code, name, image, icon )
							VALUES
							(?, ?, ?, ?, ?)' }"
			 FIELDS = "l.brand:id, l.code, l.name, l.image, l.icon">

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6001', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ l.brand:id }">
</MvFUNCTION>

<MvFUNCTION NAME = "UpdateBrand" PARAMETERS = "id, code, name, image, icon" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id" VALUE = "{ trim( l.id ) }">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">
	<MvASSIGN NAME = "l.image" VALUE = "{ trim( l.image ) }">
	<MvASSIGN NAME = "l.icon" VALUE = "{ trim( l.icon ) }">

	<MvIF EXPR = "{ ISNULL l.id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.brand_check" VALUE = "{ Load_Brand_Code( l.code ) }">
	<MvIF EXPR = "{ NOT ISNULL l.brand_check:code AND (l.brand_check:id NE l.id) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'bxtBrands
							SET
								code = ?,
								name = ?,
								image = ?,
								icon = ?
							WHERE
								id = ?' }"
			 FIELDS = "l.code, l.name, l.image, l.icon, l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6004', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DeleteBrand" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id" VALUE = "{ trim( l.id ) }">
	<MvIF EXPR = "{ ISNULL l.id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'bxtBrands WHERE id = ?' }"
			 FIELDS = "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AddType" PARAMETERS = "code, name" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.name }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ Load_Type_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	

	<MvASSIGN NAME = "l.type:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'bxtTypes' ) }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO  ' $ g.Store_Table_Prefix $ 'bxtTypes
							( id, code, name )
							VALUES
							(?, ?, ?)' }"
			 FIELDS = "l.type:id, l.code, l.name">

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6005', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ l.type:id }">
</MvFUNCTION>

<MvFUNCTION NAME = "UpdateType" PARAMETERS = "id, code, name" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id" VALUE = "{ trim( l.id ) }">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">

	<MvIF EXPR = "{ ISNULL l.id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.type_check" VALUE = "{ Load_Type_Code( l.code ) }">
	<MvIF EXPR = "{ NOT ISNULL l.type_check:code AND (l.type_check:id NE l.id) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'bxtTypes
							SET
								code = ?,
								name = ?
							WHERE
								id = ?' }"
			 FIELDS = "l.code, l.name, l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6006', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DeleteType" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id" VALUE = "{ trim( l.id ) }">
	<MvIF EXPR = "{ ISNULL l.id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'bxtTypes WHERE id = ?' }"
			 FIELDS = "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxCat_Check" PARAMETERS = "brand_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.cat_id" VALUE = "{ trim( l.cat_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.cat_id }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW 	= "bxtBrandxCat"
				QUERY 	= "{ 'SELECT
								*
							FROM ' $
								g.Store_Table_Prefix $ 'bxtBrandxCat
							WHERE
								brand_id = ?
							AND
								cat_id = ?'
							}"
				FIELDS	= "l.brand_id, l.cat_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6008:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ bxtBrandxCat.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error# Could Not Find TYPE' ) }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrandxCat">

	<MvFUNCTIONRETURN VALUE =1 />
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxCat_Assign" PARAMETERS = "brand_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.cat_id" VALUE = "{ trim( l.cat_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.cat_id }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ BrandxCat_Check( l.brand_id, l.cat_id ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO  ' $ g.Store_Table_Prefix $ 'bxtBrandxCat
							( brand_id, cat_id )
							VALUES
							(?, ?)' }"
			 FIELDS = "l.brand_id, l.cat_id">

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6009', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BrandxCat_Unassign" PARAMETERS = "brand_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.cat_id" VALUE = "{ trim( l.cat_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id OR ISNULL l.cat_id }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	
	<MvIF EXPR = "{ NOT BrandxCat_Check( l.brand_id, l.cat_id ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'bxtBrandxCat WHERE brand_id = ? AND cat_id = ?' }"
			 FIELDS = "l.brand_id, l.cat_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'BXT-MOD-6010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Brands_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "g.Filter" VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort" VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset" VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count" VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "l.search_query" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'bxtBrands', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,code:s.code,name:s.name,image:s.image,icon:s.icon' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,code:s.code,name:s.name,image:s.image,icon:s.icon', 's.id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'bxtBrands', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'BXT-MOD-6002',g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT bxtBrands.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( bxtBrands.d.id ) }">,
					"code": "<MvEVAL EXPR = "{ bxtBrands.d.code }">",
					"name": "<MvEVAL EXPR = "{ bxtBrands.d.name }">",
					"image": "<MvEVAL EXPR = "{ bxtBrands.d.image }">",
					"image_prev": "<MvEVAL EXPR = "{ bxtBrands.d.image }">",
					"icon": "<MvEVAL EXPR = "{ bxtBrands.d.icon }">",
					"icon_prev": "<MvEVAL EXPR = "{ bxtBrands.d.icon }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "bxtBrands" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtBrands">
	}

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Brand_Insert" PARAMETERS = "code, name, image, icon" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ l.code }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">
	<MvASSIGN NAME = "l.image" VALUE = "{ l.image }">
	<MvASSIGN NAME = "l.icon" VALUE = "{ l.icon }">

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Brand Code is required.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Please enter a Valid Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'name', 'Brand Name is required.' ) }">
	</MvIF>

	<MvIF EXPR = "{ AddBrand(l.code, l.name, l.image, l.icon) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Brand_Delete" PARAMETERS = "brand_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>

	<MvIF EXPR = "{ DeleteBrand( l.brand_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Brand_Update" PARAMETERS = "id, code, name, image, icon" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ l.code }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">
	<MvASSIGN NAME = "l.image" VALUE = "{ l.image }">
	<MvASSIGN NAME = "l.icon" VALUE = "{ l.icon }">

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Brand Code is required.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Please enter a Valid Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'name', 'Brand Name is required.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.brand_check" VALUE = "{ Load_Brand_Code( l.code ) }">
	<MvIF EXPR = "{ NOT ISNULL l.brand_check:code AND (l.brand_check:id NE l.id) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'A Brand with the code ' $ l.code $ ' already exists.' ) }">
	</MvIF>

	<MvIF EXPR = "{ UpdateBrand( l.id, l.code, l.name, l.image, l.icon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Types_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "g.Filter" VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort" VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset" VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count" VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "l.search_query" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'bxtTypes', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,code:s.code,name:s.name' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,code:s.code,name:s.name', 's.id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'bxtTypes', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'BXT-MOD-6003',g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT bxtTypes.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( bxtTypes.d.id ) }">,
					"code": "<MvEVAL EXPR = "{ bxtTypes.d.code }">",
					"name": "<MvEVAL EXPR = "{ bxtTypes.d.name }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "bxtTypes" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "bxtTypes">
	}

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Type_Insert" PARAMETERS = "code, name" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Type Code is required.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Please enter a Valid Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'name', 'Type Name is required.' ) }">
	</MvIF>

	<MvIF EXPR = "{ AddType(l.code, l.name) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Type_Delete" PARAMETERS = "type_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.type_id" VALUE = "{ trim( l.type_id ) }">

	<MvIF EXPR = "{ ISNULL l.type_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>

	<MvIF EXPR = "{ DeleteType( l.type_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Type_Update" PARAMETERS = "id, code, name" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.code" VALUE = "{ trim( l.code ) }">
	<MvASSIGN NAME = "l.name" VALUE = "{ trim( l.name ) }">

	<MvIF EXPR = "{ ISNULL l.code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Type Code is required.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Please enter a Valid Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'name', 'Type Name is required.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.type_check" VALUE = "{ Load_Type_Code( l.code ) }">
	<MvIF EXPR = "{ NOT ISNULL l.type_check:code AND (l.type_check:id NE l.id) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'A Type with the code ' $ l.code $ ' already exists.' ) }">
	</MvIF>

	<MvIF EXPR = "{ UpdateType( l.id, l.code, l.name ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has Occurred.' ) }">
	</MvIF>

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ViewBrands_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "html, text, compresswhitespace">
	<MvASSIGN NAME = "g.Filter" VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort" VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset" VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count" VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "g.Brand_ID" VALUE = "{ trim( g.Brand_ID ) }">

	<MvASSIGN NAME = "l.search_query" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'c.*, b.brand_id' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Categories', 'c' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'c', g.Store_Table_Prefix $ 'bxtBrandxCat', 'b', 'c.id = b.cat_id AND b.brand_id = ?', 'g.Brand_ID' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, '1', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'assigned:b.brand_id,category_id:c.id,category_code:c.code,category_name:c.name,category_active:c.active' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'assigned:b.brand_id,category_id:c.id,category_code:c.code,category_name:c.name,category_active:c.active', 'c.disp_order' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'Categories', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'BXT-MOD-6011',g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT Categories.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"brand_id": <MvEVAL EXPR = "{ int( g.Brand_ID ) }">,
					"assigned": <MvEVAL EXPR = "{ int( Categories.d.brand_id ) }">,
					"category_id": <MvEVAL EXPR = "{ int( Categories.d.id ) }">,
					"category_code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.code ) }">",
					"category_name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.name ) }">",
					"category_active": <MvEVAL EXPR = "{ int( Categories.d.active ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "Categories" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Categories">
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BrandxCat_Assign_Unassign" PARAMETERS = "brand_id, cat_id, assign" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.brand_id" VALUE = "{ trim( l.brand_id ) }">
	<MvASSIGN NAME = "l.cat_id" VALUE = "{ trim( l.cat_id ) }">
	<MvASSIGN NAME = "l.assign" VALUE = "{ trim( l.assign ) }">

	<MvIF EXPR = "{ ISNULL l.brand_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'brand_id', 'Brand ID is missing.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.cat_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'cat_id', 'Category ID is missing.' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.assign }">
		<MvIF EXPR = "{ NOT BrandxCat_Assign( l.brand_id, l.cat_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'brand_id', 'An Error has occured.' ) }">
		</MvIF>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.assign }">
		<MvIF EXPR = "{ NOT BrandxCat_Unassign( l.brand_id, l.cat_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'brand_id', 'An Error has occured.' ) }">
		</MvIF>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

</MvFUNCTION>